# Packaging Information
# =====================
#
# Epitome

[metadata]
name = pds_epitome
author = PDS
author_email = pds_operator@jpl.nasa.gov
description = A small demonstration of the PDS Python repository template
long_description = file: README.md
long_description_content_type = text/markdown
version = file: src/pds/epitome/VERSION.txt
license = apache-2.0
keywords = pds, epitome, exemplar, prototype, demonstration, example, exhibit
url = https://github.com/nasa-pds-engineering-node/epitome
download_url = https://github.com/nasa-pds-engineering-node/epitome/releases/
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent


# Options
# -------
#
# The options here describe the morphology of the package, such as the
# packages it depends on, namespaces, and so forth.

[options]
install_requires =  # nothing yet
zip_safe = True
include_package_data = True
namespace_packages = pds
package_dir =
    = src
packages = find_namespace:
python_requires = >= 3.9

[options.extras_require]
dev =
    black~=23.7.0
    flake8~=6.1.0
    flake8-bugbear~=23.7.10
    flake8-docstrings~=1.7.0
    pep8-naming~=0.13.3
    mypy~=1.5.1
    pydocstyle~=6.3.0
    coverage~=7.3.0
    pytest~=7.4.0
    pytest-cov~=4.1.0
    pytest-watch~=4.2.0
    pytest-xdist~=3.3.1
    pre-commit~=3.3.3
    sphinx~=3.2.1
    sphinx-rtd-theme~=0.5.0
    sphinxcontrib-applehelp==1.0.0
    sphinxcontrib-devhelp==1.0.0
    sphinxcontrib-htmlhelp==1.0.0
    sphinxcontrib-qthelp==1.0.0
    sphinxcontrib-serializinghtml==1.1.3
    alabaster==0.7.12
    tox~=4.11.0
    types-setuptools~=68.1.0.0
    Jinja2<3.1

[options.entry_points]
console_scripts =
    pds-epitome = pds.epitome.main:main

[options.packages.find]
# Don't change this. Needed to find packages under src/
where = src


# Coverage Testing
# ----------------
#
# The ``coverage`` tool helps ensure that all parts of your code is actually
# used. The settings here tell what files we can skip. Feel free to adjust
# this.
#
# See https://coverage.readthedocs.io/ for more.
[coverage:run]
# omit = */_version.py,*/__init__.py  # We no longer user Versioneer ðŸ˜†


# Test Options
# ------------
#
# Generic unit, functional, integration, acceptance, etc., testing goes here.
# Right now it's blank.
[test]
# (Blank for now.)


# Pytest
# ------
#
# Pytest is the modern way to run all sorts of tests in code. It works with
# the ``unittest`` module in the Python Standard Library and also offers its
# own shortcuts to simplifying writing and running tests.
#
# See https://docs.pytest.org/ for more information.
[tool:pytest]
addopts = -n auto --cov=pds


# Installation Options
# --------------------
#
# Any custom options needed to install this package go here. Right now it's
# blank.
[install]
# (Blank for now.)


# Flake8
# ------
#
# Flake8 (pronounced "flay-kate") is a Python style guide tool. It checks your
# code against a library of "best practices" for writing Python and lets you
# know when things aren't quite the "best". There are numerous options below
# and you can read more about the tool at https://flake8.pycqa.org/
[flake8]
max-line-length = 120
extend-exclude = docs,tests,setup.py
docstring_convention = google

# Ignoring:
# E203 prevents flake8 from complaining about whitespace around slice
# components. Black formats per PEP8 and flake8 doesn't like some of
# this.
#
# E501 prevents flake8 from complaining line lengths > 79. We will use
# flake8-bugbear's B950 to handle line length lint errors. This trips
# when a line is > max-line-length + 10%.
extend-ignore = E203, E501

# Selects following test categories:
# D: Docstring errors and warnings
# E, W: PEP8 errors and warnings
# F: PyFlakes codes
# N: PEP8 Naming plugin codes
# B: flake8-bugbear codes
# B***: Specific flake8-bugbear opinionated warnings to trigger
#   B902: Invalid first argument used for method. Use self for instance
#       methods, and cls for class methods
#   B903: Use collections.namedtuple (or typing.NamedTuple) for data classes
#       that only set attributes in an __init__ method, and do nothing else.
#   B950: Line too long. This is a pragmatic equivalent of pycodestyle's
#       E501: it considers "max-line-length" but only triggers when the value
#       has been exceeded by more than 10%.
select = D,E,F,N,W,B,B902,B903,B950


# mypy
# ----
#
# ``mypy`` checks your use of type annotations in modern Python code, similar
# to compile-time type checking in statically typed languages. This helps
# detect errors early instead of at run-time where they're much harder to
# debug.
#
# For more information about ``mypy``, see: https://mypy.readthedocs.io/

[mypy]
# The generic ``mypy`` settings are blank for now, but there are more specific
# options below. Note that the section syntax for ``mypy`` includes
# glob-style wildcards to match file patterns.
